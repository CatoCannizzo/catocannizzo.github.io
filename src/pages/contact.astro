---
// This page contains css styles outside of tailwind!
// See <style> below
import UILayout from "@/layouts/UILayout.astro";
import { Button } from "@comps/ui/button";
---

<UILayout title="Contact Me" NoFeedback={true}>
  <div class="prose flex w-full flex-col items-center dark:prose-invert">
    <h1 class="mb-0 mt-5">Hello!</h1>
    <div
      id="typewriter"
      role="marquee"
      aria-label="Dynamic prompt: What is your question? What is something I can improve? What is your favorite blank?"
      tabindex="0">
      <h2 aria-hidden class="mt-0">
        What's <span class="typed-text"></span>
        <!-- blink span has <style tags> below -->
        <span class="cursor blink -ml-1 inline-block w-1 bg-accent">&nbsp;</span
        >
      </h2>
    </div>

    <form
      action="https://api.web3forms.com/submit"
      method="POST"
      id="form"
      class="w-full">
      <fieldset class="flex w-full flex-col items-center gap-3">
        <h2 class="mb-0 mt-0">Contact Form</h2>
        <input
          type="hidden"
          name="access_key"
          value="108c23eb-7cb4-41f9-bcbd-5437566dec4d"
        />
        <input
          type="hidden"
          name="subject"
          value="New Submission from Web3Forms"
        />
        <input
          type="hidden"
          name="redirect"
          value="https://web3forms.com/success"
        />
        <input type="checkbox" name="botcheck" id="" style="display: none;" />
        <label for="name">Name</label>
        <input
          class="bg-card px-2 md:w-1/2"
          type="text"
          name="name"
          id="name"
          placeholder="First Last"
          required
        />
        <label for="email">Email Address</label>
        <input
          class="bg-card px-2 md:w-1/2"
          type="email"
          name="email"
          id="email"
          placeholder="name@company.com"
          required
        />
        <label for="message">Your Message</label>
        <textarea
          rows="5"
          name="message"
          id="message"
          placeholder="Lorem est nunc, venenatis in, tristique eu."
          class="bg-card px-2 md:w-full"
          required></textarea>
        <Button type="submit" variant="accent"> Send Message </Button>
      </fieldset>
    </form>

    <style>
      .blink {
        animation: blink 0.8s ease-in-out infinite;
      }

      @keyframes blink {
        0%,
        100% {
          background: hsl(var(--accent));
        }
        40%,
        50% {
          background: transparent;
        }
      }
    </style>

    <script>
      // !!! Add reduced motion turn off, & ability to pause
      var typedText: HTMLElement;
      var cursor: HTMLElement;

      function isHTMLElement(ele: unknown): ele is HTMLElement {
        return ele instanceof HTMLElement;
      }

      const textArray: string[] = [
        "your question?",
        "the bug you found?",
        "your favorite hike?",
        "your suggestion?",
        "your job offer? :)",
        "something I can improve?",
        "your comment?",
        "your favorite hike?",
        "the best feature of my site?",
        "your concern?",
        "your thoughts on the socio-economic climate of today's world?",
      ];
      let textArrayIndex: number = 0;
      let charIndex: number = 0;
      // !? follow the use of setInterval here to learn to prevent multiple, recusive calls on page load (compared to previouslly used setTimeout)
      let intervalId: ReturnType<typeof setTimeout>;
      let switcher: Function;

      const erase = () => {
        if (charIndex > 0) {
          cursor!.classList.remove("blink");
          typedText!.textContent = textArray[textArrayIndex].slice(
            0,
            charIndex - 1,
          );
          charIndex--;
        } else {
          cursor!.classList.add("blink");
          textArrayIndex++;
          if (textArrayIndex > textArray.length - 1) {
            textArrayIndex = 0;
          }
          clearInterval(intervalId);
          switcher = type;
          intervalId = setInterval(switcher, 170);
        }
      };

      const type = () => {
        if (charIndex <= textArray[textArrayIndex].length - 1) {
          cursor.classList.remove("blink");
          typedText.textContent += textArray[textArrayIndex].charAt(charIndex);
          charIndex++;
        } else {
          cursor.classList.add("blink");
          clearInterval(intervalId);
          switcher = erase;
          intervalId = setInterval(switcher, 85);
        }
      };

      document.addEventListener("astro:page-load", () => {
        let vUnknown: unknown = document.querySelector(".typed-text");
        charIndex = 0;
        if (!isHTMLElement(vUnknown)) {
          throw new Error("The typewriter span was not found");
        } else {
          typedText = vUnknown;
        }
        vUnknown = document.querySelector(".cursor");
        if (!isHTMLElement(vUnknown)) {
          throw new Error("The cursor element was not found");
        } else {
          cursor = vUnknown;
        }
        if (intervalId !== undefined) {
          clearInterval(intervalId);
        }
        intervalId = setInterval(type, 170);
        // var typewriter = document.querySelector("typewriter");
        // if (!isHTMLElement(typewriter)) {
        //   throw new Error("The typewriter div was not found");
        // }
        // typewriter.addEventListener();
      });
    </script>
  </div>
</UILayout>
